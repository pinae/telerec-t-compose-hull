- name: Generate Rule String for Traefik
  ansible.builtin.set_fact:
    #traefik_web_rule: "Host(`{{ service_cfg.domain }}`){% if service_cfg.url_path_prefix is defined and service_cfg.url_path_prefix|length %} && PathPrefix(`{{ service_cfg.url_path_prefix }}`){% endif %}{% if service_cfg.external is not defined or service_cfg.external == false %} && (ClientIP(`192.168.0.0/16`) || ClientIP(`10.0.0.0/8`) || ClientIP(`172.16.0.0/16`) || ClientIP(`172.17.0.0/16`) || ClientIP(`172.18.0.0/16`) || ClientIP(`172.19.0.0/16`) || ClientIP(`172.20.0.0/16`) || ClientIP(`172.21.0.0/16`) || ClientIP(`172.22.0.0/16`) || ClientIP(`172.23.0.0/16`) || ClientIP(`172.24.0.0/16`) || ClientIP(`172.25.0.0/16`) || ClientIP(`172.26.0.0/16`) || ClientIP(`172.27.0.0/16`) || ClientIP(`172.28.0.0/16`) || ClientIP(`172.29.0.0/16`) || ClientIP(`172.30.0.0/16`) || ClientIP(`172.31.0.0/16`)){% endif %}"
    traefik_web_rule: "Host(`{{ service_cfg.domain }}`){% if service_cfg.url_path_prefix is defined and service_cfg.url_path_prefix|length %} && PathPrefix(`{{ service_cfg.url_path_prefix }}`){% endif %}{% if service_cfg.external is not defined or service_cfg.external == false %} && ClientIP(`192.168.111.245`){% endif %}"
  tags: [ always ]

- name: Generate Compose File
  template:
    src: compose_master_template.yml.j2
    dest: "{{ service_cfg.directory }}/docker-compose.yml"
    owner: "{{ service_cfg.owner }}"
    group: docker
  tags: [ always ]

- name: Validate compose file
  ansible.builtin.command:
    cmd: docker compose --file docker-compose.yml config --quiet
    chdir: "{{ service_cfg.directory }}"
  changed_when: false

- name: Pull container images
  community.docker.docker_compose_v2_pull:
    project_src: "{{ service_cfg.directory }}"

- name: Create containers
  ansible.builtin.command:
    cmd: docker compose --ansi never --progress plain --file docker-compose.yml create
    chdir: "{{ service_cfg.directory }}"
  register: temp_compose_create
  changed_when: "'Created' in temp_compose_create.stdout"

- name: Start containers
  community.docker.docker_compose_v2:
    #project_name: "{{ service_cfg.name }}"
    project_src: "{{ service_cfg.directory }}"
    state: "{{ docker_compose_params.state }}"
    recreate: "{{ docker_compose_params.recreate }}"
    remove_orphans: "{{ docker_compose_params.remove_orphans }}"
    remove_volumes: "{{ docker_compose_params.remove_volumes }}"
  register: service_stack
  tags: [ always ]
