- name: Create lists for Traefik rules and middlewares
  ansible.builtin.set_fact:
    traefik_rules: []
    internal_ip_rules: []
- name: Add a domain rule
  ansible.builtin.set_fact:
    domain_rule: "Host(`{{ rule_builder_config.domain }}`)"
  when:
    rule_builder_config.domain | default('') | trim | length > 0
- name: Append the domain rule to the list of rules
  ansible.builtin.set_fact:
    traefik_rules: "{{ traefik_rules + [ domain_rule ] }}"
  when:
    rule_builder_config.domain | default('') | trim | length > 0
- name: Add a url_path_prefix rule
  ansible.builtin.set_fact:
    path_prefix_rule: "PathPrefix(`{{ rule_builder_config.url_path_prefix }}`)"
  when:
    rule_builder_config.url_path_prefix | default('') | trim | length > 0
- name: Append the url_path_prefix rule to the list of rules
  ansible.builtin.set_fact:
    traefik_rules: "{{ traefik_rules + [ path_prefix_rule ] }}"
  when:
    rule_builder_config.url_path_prefix | default('') | trim | length > 0
- name: generate internal ip range rule
  include_tasks: traefik_internal_ip_rule_builder.yml
  with_items: "{{ traefik.internal_ip_ranges }}"
  loop_control:
    loop_var: ip
  when: rule_builder_config.external is not defined or rule_builder_config.external == false
- name: Make a block of internal ip_rules chained by or and enclosed in parentheses
  ansible.builtin.set_fact:
    joined_client_ip_rules: "({{ internal_ip_rules | join(' || ') }})"
  when:
    internal_ip_rules | length > 0
- name: Append the internal ip_rules block
  ansible.builtin.set_fact:
    traefik_rules: "{{ traefik_rules + [ joined_client_ip_rules ] }}"
  when:
    internal_ip_rules | length > 0
- name: Construct rule string
  ansible.builtin.set_fact:
    traefik_rule: "{{ traefik_rules | join(' && ') }}"